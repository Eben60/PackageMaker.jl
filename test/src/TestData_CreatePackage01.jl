module TestData_CreatePackage

using PackageMaker
using PackageMaker: HtmlElem

temp_dir = mktempdir()


fv = Dict{Symbol, HtmlElem}(
    :Codecov_file => PackageMaker.HtmlElem(:Codecov_file, :input, String[], :text, :Codecov_form, "nothing", false),
    :CompatHelper_cron => PackageMaker.HtmlElem(:CompatHelper_cron, :input, String[], :text, :CompatHelper_form, "0 0 * * *", false),
    :CompatHelper_destination => PackageMaker.HtmlElem(:CompatHelper_destination, :input, String[], :text, :CompatHelper_form, "CompatHelper.yml", false),
    :CompatHelper_file => PackageMaker.HtmlElem(:CompatHelper_file, :input, String[], :text, :CompatHelper_form, "<DEFAULT_FILE>", false),
    :Dependabot_file => PackageMaker.HtmlElem(:Dependabot_file, :input, String[], :text, :Dependabot_form, "<DEFAULT_FILE>", false),
    :Documenter_deploy => PackageMaker.HtmlElem(:Documenter_deploy, :input, String[], :checkbox, :Documenter_form, "on", false),
    :Documenter_index_md => PackageMaker.HtmlElem(:Documenter_index_md, :input, String[], :text, :Documenter_form, "<DEFAULT_FILE>", false),
    :Documenter_make_jl => PackageMaker.HtmlElem(:Documenter_make_jl, :input, String[], :text, :Documenter_form, "<DEFAULT_FILE>", false),
    :GeneralOptions_add_imports => PackageMaker.HtmlElem(:GeneralOptions_add_imports, :input, String[], :checkbox, :GeneralOptions_form, "on", true),
    :GeneralOptions_authors => PackageMaker.HtmlElem(:GeneralOptions_authors, :input, String[], :text, :GeneralOptions_form, "Eben007 <E007@nowhere.org>", false),
    :GeneralOptions_docstring => PackageMaker.HtmlElem(:GeneralOptions_docstring, :textarea, String[], :textarea, :GeneralOptions_form, "Short package info.\nThis will be put into the package docstring.", nothing),
    :GeneralOptions_host => PackageMaker.HtmlElem(:GeneralOptions_host, :input, String[], :text, :GeneralOptions_form, "github.com", false),
    :GeneralOptions_is_package => PackageMaker.HtmlElem(:GeneralOptions_is_package, :input, String[], :checkbox, :GeneralOptions_form, "on", true),
    :GeneralOptions_jl_suffix => PackageMaker.HtmlElem(:GeneralOptions_jl_suffix, :input, String[], :checkbox, :GeneralOptions_form, "on", false),
    :GeneralOptions_julia_min_version => PackageMaker.HtmlElem(:GeneralOptions_julia_min_version, :input, String[], :text, :GeneralOptions_form, "1.11.0", false),
    :GeneralOptions_makerepo => HtmlElem(:GeneralOptions_makerepo, :input, String[], :checkbox, :GeneralOptions_form, "on", false),
    :GeneralOptions_proj_name => PackageMaker.HtmlElem(:GeneralOptions_proj_name, :input, String[], :text, :GeneralOptions_form, "LocalTestProj616523", false),
    :GeneralOptions_proj_pkg => PackageMaker.HtmlElem(:GeneralOptions_proj_pkg, :textarea, String[], :textarea, :GeneralOptions_form, "Unicode", nothing),
    :GeneralOptions_project_dir => PackageMaker.HtmlElem(:GeneralOptions_project_dir, :input, String[], :text, :GeneralOptions_form, temp_dir, false),
    :GeneralOptions_repopublic => HtmlElem(:GeneralOptions_repopublic, :input, String[], :checkbox, :GeneralOptions_form, "on", false),
    :GeneralOptions_user_name => PackageMaker.HtmlElem(:GeneralOptions_user_name, :input, String[], :text, :GeneralOptions_form, "Eben007", false),
    :GeneralOptions_versioned_man => PackageMaker.HtmlElem(:GeneralOptions_versioned_man, :input, String[], :checkbox, :GeneralOptions_form, "on", false),
    :Git_branch => PackageMaker.HtmlElem(:Git_branch, :input, String[], :text, :Git_form, "main", false),
    :Git_email => PackageMaker.HtmlElem(:Git_email, :input, String[], :text, :Git_form, "nothing", false),
    :Git_gpgsign => PackageMaker.HtmlElem(:Git_gpgsign, :input, String[], :checkbox, :Git_form, "on", false),
    :Git_ignore => PackageMaker.HtmlElem(:Git_ignore, :textarea, String[], :textarea, :Git_form, "", nothing),
    :Git_jl => PackageMaker.HtmlElem(:Git_jl, :input, String[], :checkbox, :Git_form, "on", true),
    :Git_manifest => PackageMaker.HtmlElem(:Git_manifest, :input, String[], :checkbox, :Git_form, "on", false),
    :Git_name => PackageMaker.HtmlElem(:Git_name, :input, String[], :text, :Git_form, "nothing", false),
    :Git_ssh => PackageMaker.HtmlElem(:Git_ssh, :input, String[], :checkbox, :Git_form, "on", false),
    :GitHubActions_coverage => PackageMaker.HtmlElem(:GitHubActions_coverage, :input, String[], :checkbox, :GitHubActions_form, "on", false),
    :GitHubActions_destination => PackageMaker.HtmlElem(:GitHubActions_destination, :input, String[], :text, :GitHubActions_form, "CI.yml", false),
    :GitHubActions_extra_versions => PackageMaker.HtmlElem(:GitHubActions_extra_versions, :textarea, String[], :textarea, :GitHubActions_form, "1.10\npre", nothing),
    :GitHubActions_file => PackageMaker.HtmlElem(:GitHubActions_file, :input, String[], :text, :GitHubActions_form, "<DEFAULT_FILE>", false),
    :GitHubActions_linux => PackageMaker.HtmlElem(:GitHubActions_linux, :input, String[], :checkbox, :GitHubActions_form, "on", true),
    :GitHubActions_osx => PackageMaker.HtmlElem(:GitHubActions_osx, :input, String[], :checkbox, :GitHubActions_form, "on", false),
    :GitHubActions_windows => PackageMaker.HtmlElem(:GitHubActions_windows, :input, String[], :checkbox, :GitHubActions_form, "on", false),
    :GitHubActions_x64 => PackageMaker.HtmlElem(:GitHubActions_x64, :input, String[], :checkbox, :GitHubActions_form, "on", true),
    :GitHubActions_x86 => PackageMaker.HtmlElem(:GitHubActions_x86, :input, String[], :checkbox, :GitHubActions_form, "on", false),
    :License_destination => PackageMaker.HtmlElem(:License_destination, :input, String[], :text, :License_form, "LICENSE", false),
    :License_name => PackageMaker.HtmlElem(:License_name, :input, ["menu_target"], :text, :License_form, "MIT", false),
    :License_name_1 => PackageMaker.HtmlElem(:License_name_1, :input, String[], :radio, :License_form, "MIT", false),
    :License_name_10 => PackageMaker.HtmlElem(:License_name_10, :input, String[], :radio, :License_form, "LGPL-2.1+", false),
    :License_name_11 => PackageMaker.HtmlElem(:License_name_11, :input, String[], :radio, :License_form, "LGPL-3.0+", false),
    :License_name_12 => PackageMaker.HtmlElem(:License_name_12, :input, String[], :radio, :License_form, "MPL", false),
    :License_name_2 => PackageMaker.HtmlElem(:License_name_2, :input, String[], :radio, :License_form, "AGPL-3.0+", false),
    :License_name_3 => PackageMaker.HtmlElem(:License_name_3, :input, String[], :radio, :License_form, "ASL", false),
    :License_name_4 => PackageMaker.HtmlElem(:License_name_4, :input, String[], :radio, :License_form, "BSD2", false),
    :License_name_5 => PackageMaker.HtmlElem(:License_name_5, :input, String[], :radio, :License_form, "BSD3", false),
    :License_name_6 => PackageMaker.HtmlElem(:License_name_6, :input, String[], :radio, :License_form, "EUPL-1.2+", false),
    :License_name_7 => PackageMaker.HtmlElem(:License_name_7, :input, String[], :radio, :License_form, "GPL-2.0+", false),
    :License_name_8 => PackageMaker.HtmlElem(:License_name_8, :input, String[], :radio, :License_form, "GPL-3.0+", false),
    :License_name_9 => PackageMaker.HtmlElem(:License_name_9, :input, String[], :radio, :License_form, "ISC", false),
    :License_path => PackageMaker.HtmlElem(:License_path, :input, String[], :text, :License_form, "nothing", false),
    :LocalPackage_Choice => PackageMaker.HtmlElem(:LocalPackage_Choice, :input, String[], :radio, :use_purpose_form, "LocalPackage", true),
    :Project_Choice => PackageMaker.HtmlElem(:Project_Choice, :input, String[], :radio, :use_purpose_form, "Project", false),
    :ProjectFile_version => PackageMaker.HtmlElem(:ProjectFile_version, :input, String[], :text, :ProjectFile_form, "1.2.3", false),
    :Readme_destination => PackageMaker.HtmlElem(:Readme_destination, :input, String[], :text, :Readme_form, "README.md", false),
    :Readme_file => PackageMaker.HtmlElem(:Readme_file, :input, String[], :text, :Readme_form, "<DEFAULT_FILE>", false),
    :Readme_inline_badges => PackageMaker.HtmlElem(:Readme_inline_badges, :input, String[], :checkbox, :Readme_form, "on", false),
    :RegisteredPackage_Choice => PackageMaker.HtmlElem(:RegisteredPackage_Choice, :input, String[], :radio, :use_purpose_form, "RegisteredPackage", false),
    :Save_Configuration_config_name => PackageMaker.HtmlElem(:Save_Configuration_config_name, :input, ["menu_target"], :text, :Save_Configuration_form, "", false),
    :Save_Configuration_config_name_1 => PackageMaker.HtmlElem(:Save_Configuration_config_name_1, :input, String[], :radio, :Save_Configuration_form, "! Dep / ! Doc v#0.1.0", false),
    :Save_Configuration_config_name_10 => PackageMaker.HtmlElem(:Save_Configuration_config_name_10, :input, String[], :radio, :Save_Configuration_form, "1.10.9d", false),
    :Save_Configuration_config_name_11 => PackageMaker.HtmlElem(:Save_Configuration_config_name_11, :input, String[], :radio, :Save_Configuration_form, "1.11.4", false),
    :Save_Configuration_config_name_12 => PackageMaker.HtmlElem(:Save_Configuration_config_name_12, :input, String[], :radio, :Save_Configuration_form, "2delete", false),
    :Save_Configuration_config_name_13 => PackageMaker.HtmlElem(:Save_Configuration_config_name_13, :input, String[], :radio, :Save_Configuration_form, "TestPackage01", false),
    :Save_Configuration_config_name_14 => PackageMaker.HtmlElem(:Save_Configuration_config_name_14, :input, String[], :radio, :Save_Configuration_form, "ignores", false),
    :Save_Configuration_config_name_15 => PackageMaker.HtmlElem(:Save_Configuration_config_name_15, :input, String[], :radio, :Save_Configuration_form, "is a project", false),
    :Save_Configuration_config_name_16 => PackageMaker.HtmlElem(:Save_Configuration_config_name_16, :input, String[], :radio, :Save_Configuration_form, "is pkg ProjFile only", false),
    :Save_Configuration_config_name_17 => PackageMaker.HtmlElem(:Save_Configuration_config_name_17, :input, String[], :radio, :Save_Configuration_form, "piracy", false),
    :Save_Configuration_config_name_2 => PackageMaker.HtmlElem(:Save_Configuration_config_name_2, :input, String[], :radio, :Save_Configuration_form, "1.10.3", false),
    :Save_Configuration_config_name_3 => PackageMaker.HtmlElem(:Save_Configuration_config_name_3, :input, String[], :radio, :Save_Configuration_form, "1.10.4", false),
    :Save_Configuration_config_name_4 => PackageMaker.HtmlElem(:Save_Configuration_config_name_4, :input, String[], :radio, :Save_Configuration_form, "1.10.5", false),
    :Save_Configuration_config_name_5 => PackageMaker.HtmlElem(:Save_Configuration_config_name_5, :input, String[], :radio, :Save_Configuration_form, "1.10.8", false),
    :Save_Configuration_config_name_6 => PackageMaker.HtmlElem(:Save_Configuration_config_name_6, :input, String[], :radio, :Save_Configuration_form, "1.10.9", false),
    :Save_Configuration_config_name_7 => PackageMaker.HtmlElem(:Save_Configuration_config_name_7, :input, String[], :radio, :Save_Configuration_form, "1.10.9a", false),
    :Save_Configuration_config_name_8 => PackageMaker.HtmlElem(:Save_Configuration_config_name_8, :input, String[], :radio, :Save_Configuration_form, "1.10.9b", false),
    :Save_Configuration_config_name_9 => PackageMaker.HtmlElem(:Save_Configuration_config_name_9, :input, String[], :radio, :Save_Configuration_form, "1.10.9c", false),
    :SavedConfigTag_1 => PackageMaker.HtmlElem(:SavedConfigTag_1, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_1", false),
    :SavedConfigTag_10 => PackageMaker.HtmlElem(:SavedConfigTag_10, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_10", false),
    :SavedConfigTag_11 => PackageMaker.HtmlElem(:SavedConfigTag_11, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_11", false),
    :SavedConfigTag_12 => PackageMaker.HtmlElem(:SavedConfigTag_12, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_12", false),
    :SavedConfigTag_13 => PackageMaker.HtmlElem(:SavedConfigTag_13, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_13", false),
    :SavedConfigTag_14 => PackageMaker.HtmlElem(:SavedConfigTag_14, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_14", false),
    :SavedConfigTag_15 => PackageMaker.HtmlElem(:SavedConfigTag_15, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_15", false),
    :SavedConfigTag_16 => PackageMaker.HtmlElem(:SavedConfigTag_16, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_16", false),
    :SavedConfigTag_17 => PackageMaker.HtmlElem(:SavedConfigTag_17, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_17", false),
    :SavedConfigTag_2 => PackageMaker.HtmlElem(:SavedConfigTag_2, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_2", false),
    :SavedConfigTag_3 => PackageMaker.HtmlElem(:SavedConfigTag_3, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_3", false),
    :SavedConfigTag_4 => PackageMaker.HtmlElem(:SavedConfigTag_4, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_4", false),
    :SavedConfigTag_5 => PackageMaker.HtmlElem(:SavedConfigTag_5, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_5", false),
    :SavedConfigTag_6 => PackageMaker.HtmlElem(:SavedConfigTag_6, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_6", false),
    :SavedConfigTag_7 => PackageMaker.HtmlElem(:SavedConfigTag_7, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_7", false),
    :SavedConfigTag_8 => PackageMaker.HtmlElem(:SavedConfigTag_8, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_8", false),
    :SavedConfigTag_9 => PackageMaker.HtmlElem(:SavedConfigTag_9, :input, String[], :radio, :use_purpose_form, "SavedConfigTag_9", false),
    :SrcDir_file => PackageMaker.HtmlElem(:SrcDir_file, :input, String[], :text, :SrcDir_form, "<DEFAULT_FILE>", false),
    :TagBot_branches => PackageMaker.HtmlElem(:TagBot_branches, :input, String[], :checkbox, :TagBot_form, "on", false),
    :TagBot_changelog => PackageMaker.HtmlElem(:TagBot_changelog, :input, String[], :text, :TagBot_form, "nothing", false),
    :TagBot_changelog_ignore => PackageMaker.HtmlElem(:TagBot_changelog_ignore, :input, String[], :text, :TagBot_form, "nothing", false),
    :TagBot_destination => PackageMaker.HtmlElem(:TagBot_destination, :input, String[], :text, :TagBot_form, "TagBot.yml", false),
    :TagBot_dispatch => PackageMaker.HtmlElem(:TagBot_dispatch, :input, String[], :checkbox, :TagBot_form, "on", false),
    :TagBot_dispatch_delay => PackageMaker.HtmlElem(:TagBot_dispatch_delay, :input, String[], :text, :TagBot_form, "nothing", false),
    :TagBot_file => PackageMaker.HtmlElem(:TagBot_file, :input, String[], :text, :TagBot_form, "<DEFAULT_FILE>", false),
    :TagBot_gpg => PackageMaker.HtmlElem(:TagBot_gpg, :input, String[], :text, :TagBot_form, "nothing", false),
    :TagBot_gpg_password => PackageMaker.HtmlElem(:TagBot_gpg_password, :input, String[], :text, :TagBot_form, "nothing", false),
    :TagBot_registry => PackageMaker.HtmlElem(:TagBot_registry, :input, String[], :text, :TagBot_form, "nothing", false),
    :TagBot_ssh => PackageMaker.HtmlElem(:TagBot_ssh, :input, String[], :text, :TagBot_form, "nothing", false),
    :TagBot_ssh_password => PackageMaker.HtmlElem(:TagBot_ssh_password, :input, String[], :text, :TagBot_form, "nothing", false),
    :TagBot_token => PackageMaker.HtmlElem(:TagBot_token, :input, String[], :text, :TagBot_form, "nothing", false),
    :TagBot_trigger => PackageMaker.HtmlElem(:TagBot_trigger, :input, String[], :text, :TagBot_form, "JuliaTagBot", false),
    :Tests_aqua => PackageMaker.HtmlElem(:Tests_aqua, :input, String[], :checkbox, :Tests_form, "on", false),
    :Tests_aqua_kwargs => PackageMaker.HtmlElem(:Tests_aqua_kwargs, :textarea, String[], :textarea, :Tests_form, "ambiguities", nothing),
    :Tests_file => PackageMaker.HtmlElem(:Tests_file, :input, String[], :text, :Tests_form, "<DEFAULT_FILE>", false),
    :Tests_jet => PackageMaker.HtmlElem(:Tests_jet, :input, String[], :checkbox, :Tests_form, "on", false),
    :Tests_project => PackageMaker.HtmlElem(:Tests_project, :input, String[], :checkbox, :Tests_form, "on", true),
    :Use_Codecov => PackageMaker.HtmlElem(:Use_Codecov, :input, ["TogglePlugin"], :checkbox, :Codecov_form, "Use_Codecov", false),
    :Use_CompatHelper => PackageMaker.HtmlElem(:Use_CompatHelper, :input, ["TogglePlugin"], :checkbox, :CompatHelper_form, "Use_CompatHelper", false),
    :Use_Dependabot => PackageMaker.HtmlElem(:Use_Dependabot, :input, ["TogglePlugin"], :checkbox, :Dependabot_form, "Use_Dependabot", false),
    :Use_Documenter => PackageMaker.HtmlElem(:Use_Documenter, :input, ["TogglePlugin"], :checkbox, :Documenter_form, "Use_Documenter", false),
    :Use_GeneralOptions => PackageMaker.HtmlElem(:Use_GeneralOptions, :input, ["TogglePlugin"], :checkbox, :GeneralOptions_form, "Use_GeneralOptions", true),
    :Use_Git => PackageMaker.HtmlElem(:Use_Git, :input, ["TogglePlugin"], :checkbox, :Git_form, "Use_Git", false),
    :Use_GitHubActions => PackageMaker.HtmlElem(:Use_GitHubActions, :input, ["TogglePlugin"], :checkbox, :GitHubActions_form, "Use_GitHubActions", false),
    :Use_License => PackageMaker.HtmlElem(:Use_License, :input, ["TogglePlugin"], :checkbox, :License_form, "Use_License", false),
    :Use_ProjectFile => PackageMaker.HtmlElem(:Use_ProjectFile, :input, ["TogglePlugin"], :checkbox, :ProjectFile_form, "Use_ProjectFile", true),
    :Use_Readme => PackageMaker.HtmlElem(:Use_Readme, :input, ["TogglePlugin"], :checkbox, :Readme_form, "Use_Readme", false),
    :Use_Save_Configuration => PackageMaker.HtmlElem(:Use_Save_Configuration, :input, ["TogglePlugin"], :checkbox, :Save_Configuration_form, "Use_Save_Configuration", false),
    :Use_SrcDir => PackageMaker.HtmlElem(:Use_SrcDir, :input, ["TogglePlugin"], :checkbox, :SrcDir_form, "Use_SrcDir", true),
    :Use_TagBot => PackageMaker.HtmlElem(:Use_TagBot, :input, ["TogglePlugin"], :checkbox, :TagBot_form, "Use_TagBot", false),
    :Use_Tests => PackageMaker.HtmlElem(:Use_Tests, :input, ["TogglePlugin"], :checkbox, :Tests_form, "Use_Tests", false),
)    

end # module
